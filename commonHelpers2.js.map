{"version":3,"file":"commonHelpers2.js","sources":["../src/js/localStorage-API.js","../src/js/2-form.js"],"sourcesContent":["export function addDataToLocalStorage(key, value) {\n  try {\n    const serializedData = JSON.stringify(value);\n    localStorage.setItem(key, serializedData);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function getDataLocalStorage(localKey) {\n  try {\n    const serializedData = JSON.parse(localStorage.getItem(localKey));\n    return serializedData === null ? undefined : serializedData;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function removeDataLocalStorage(localKey) {\n  try {\n    localStorage.removeItem(localKey);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function removeAllData() {\n  localStorage.clear();\n}\n","import {\n  addDataToLocalStorage,\n  getDataLocalStorage,\n  removeDataLocalStorage,\n} from './localStorage-API.js';\n\nconst formEl = document.querySelector('form');\nformEl.addEventListener('input', recordsData);\nformEl.addEventListener('submit', clearsFormData);\n\nfunction fillsFields() {\n  const formData = getDataLocalStorage('feedback-form-state');\n  if (formData === undefined) return;\n\n  const keys = Object.keys(formData);\n\n  for (const key of keys) {\n    formEl.elements[key].value = formData[key];\n  }\n}\nfillsFields();\n\nfunction recordsData(event) {\n  const formData = {};\n\n  formEl.querySelectorAll('input, textarea').forEach(input => {\n    formData[input.name] = input.value.trim();\n  });\n\n  addDataToLocalStorage('feedback-form-state', formData);\n}\n\nfunction clearsFormData(event) {\n  event.preventDefault();\n\n  let formValid = true;\n\n  formEl.querySelectorAll('input, textarea').forEach(input => {\n    if (input.value.trim() === '') {\n      formValid = false;\n      alert(`Будь ласка, заповніть поле: ${input.name}`);\n    }\n  });\n\n  if (!formValid) return;\n\n  removeDataLocalStorage('feedback-form-state');\n  formEl.reset();\n}\n"],"names":["addDataToLocalStorage","key","value","serializedData","error","getDataLocalStorage","localKey","removeDataLocalStorage","formEl","recordsData","clearsFormData","fillsFields","formData","keys","event","input","formValid"],"mappings":"wFAAO,SAASA,EAAsBC,EAAKC,EAAO,CAChD,GAAI,CACF,MAAMC,EAAiB,KAAK,UAAUD,CAAK,EAC3C,aAAa,QAAQD,EAAKE,CAAc,CACzC,OAAQC,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACH,CAEO,SAASC,EAAoBC,EAAU,CAC5C,GAAI,CACF,MAAMH,EAAiB,KAAK,MAAM,aAAa,QAAQG,CAAQ,CAAC,EAChE,OAAOH,IAAmB,KAAO,OAAYA,CAC9C,OAAQC,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACH,CAEO,SAASG,EAAuBD,EAAU,CAC/C,GAAI,CACF,aAAa,WAAWA,CAAQ,CACjC,OAAQF,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACH,CClBA,MAAMI,EAAS,SAAS,cAAc,MAAM,EAC5CA,EAAO,iBAAiB,QAASC,CAAW,EAC5CD,EAAO,iBAAiB,SAAUE,CAAc,EAEhD,SAASC,GAAc,CACrB,MAAMC,EAAWP,EAAoB,qBAAqB,EAC1D,GAAIO,IAAa,OAAW,OAE5B,MAAMC,EAAO,OAAO,KAAKD,CAAQ,EAEjC,UAAWX,KAAOY,EAChBL,EAAO,SAASP,CAAG,EAAE,MAAQW,EAASX,CAAG,CAE7C,CACAU,IAEA,SAASF,EAAYK,EAAO,CAC1B,MAAMF,EAAW,CAAA,EAEjBJ,EAAO,iBAAiB,iBAAiB,EAAE,QAAQO,GAAS,CAC1DH,EAASG,EAAM,IAAI,EAAIA,EAAM,MAAM,MACvC,CAAG,EAEDf,EAAsB,sBAAuBY,CAAQ,CACvD,CAEA,SAASF,EAAeI,EAAO,CAC7BA,EAAM,eAAc,EAEpB,IAAIE,EAAY,GAEhBR,EAAO,iBAAiB,iBAAiB,EAAE,QAAQO,GAAS,CACtDA,EAAM,MAAM,KAAI,IAAO,KACzBC,EAAY,GACZ,MAAM,+BAA+BD,EAAM,IAAI,EAAE,EAEvD,CAAG,EAEIC,IAELT,EAAuB,qBAAqB,EAC5CC,EAAO,MAAK,EACd"}